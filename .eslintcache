[{"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\App.js":"1","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\Signup.js":"2","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\index.js":"3","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\firebase\\firebase.utils.js":"4","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\context\\AuthContex.js":"5","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\Signin.js":"6","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\Router\\Router.js":"7","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\components\\NavBar.js":"8","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\Main.js":"9","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\UserDetail.js":"10","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\helper\\FetchData.js":"11","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\helper\\CustomErrorHandler.js":"12","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\reportWebVitals.js":"13","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\UserPost.js":"14","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\components\\UserPostCard.js":"15","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\helper\\FormatDate.js":"16","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\components\\Footer.js":"17","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\components\\MediaCard.js":"18","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\New.js":"19","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\DirectMessage.js":"20"},{"size":232,"mtime":1607347959056,"results":"21","hashOfConfig":"22"},{"size":5582,"mtime":1607550492102,"results":"23","hashOfConfig":"22"},{"size":503,"mtime":1607348400349,"results":"24","hashOfConfig":"22"},{"size":2677,"mtime":1607620504592,"results":"25","hashOfConfig":"22"},{"size":578,"mtime":1607336829644,"results":"26","hashOfConfig":"22"},{"size":4449,"mtime":1607501488667,"results":"27","hashOfConfig":"22"},{"size":1473,"mtime":1607622096873,"results":"28","hashOfConfig":"22"},{"size":7134,"mtime":1607618975796,"results":"29","hashOfConfig":"22"},{"size":2109,"mtime":1607466559083,"results":"30","hashOfConfig":"22"},{"size":4982,"mtime":1607357237194,"results":"31","hashOfConfig":"22"},{"size":323,"mtime":1607356685424,"results":"32","hashOfConfig":"22"},{"size":393,"mtime":1607350126681,"results":"33","hashOfConfig":"22"},{"size":362,"mtime":1606229395942,"results":"34","hashOfConfig":"22"},{"size":2492,"mtime":1607597786440,"results":"35","hashOfConfig":"22"},{"size":6983,"mtime":1607617748797,"results":"36","hashOfConfig":"22"},{"size":167,"mtime":1607336952735,"results":"37","hashOfConfig":"22"},{"size":1287,"mtime":1607336529708,"results":"38","hashOfConfig":"22"},{"size":2260,"mtime":1607346985929,"results":"39","hashOfConfig":"22"},{"size":975,"mtime":1607503510738,"results":"40","hashOfConfig":"22"},{"size":1251,"mtime":1607622122175,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1t105b2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\App.js",[],["91","92"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\Signup.js",["93","94"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\index.js",[],["95","96"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\firebase\\firebase.utils.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\context\\AuthContex.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\Signin.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\Router\\Router.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\components\\NavBar.js",["97","98","99","100","101"],"import React, { useContext, useCallback,useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { FirebaseAuthContext } from \"../context/AuthContex\";\r\nimport firebase from \"../firebase/firebase.utils\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Input\r\n} from \"@material-ui/core\";\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    position: \"sticky\",\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  accountCircle: {\r\n    marginLeft: 5,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Navbar() {\r\n  const [url,setUrl]=useState()\r\n \r\n  const { currentUser } = useContext(FirebaseAuthContext);\r\n  /* console.log(currentUser) */\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      text: \"\",\r\n      file:\"\"\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      \r\n      const uploadTask= firebase.firebaseStorage.ref(`images/${values.file.name}`).put(values.file)\r\n      uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot=>{},\r\n      err=>{\r\n        console.log(err)\r\n      },\r\n      ()=>{\r\n         firebase.firebaseStorage\r\n         .ref(\"images\")\r\n         .child(values.file.name)\r\n         .getDownloadURL()\r\n         .then(url=>setUrl(url))\r\n      }\r\n      \r\n      \r\n      )\r\n      \r\n      firebase.firebaseDb.collection(\"allPosts\").doc(currentUser?.uid).collection(\"userPosts\").add({\r\n        id: \"fIAYZDRcLOJ1DQg25JPh\",\r\n        owner: { firstName: \"ibrahim\", lastName: \"benedict\" },\r\n        picture: url,\r\n        text: values.text,\r\n        likes: 200,\r\n        publishDate: new Date()\r\n\r\n      }).then((res)=>{\r\n        console.log(res.id)\r\n        setOpen(false)\r\n      })\r\n\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [openModal, setOpen] = React.useState(false);\r\n\r\n  const handleOpenModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n            <Input\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              type=\"file\"\r\n              fullWidth\r\n              onChange={(event)=>formik.setFieldValue(\"file\",event.target.files[0])}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              {...formik.getFieldProps(\"text\")}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Share\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n       \r\n      </form>\r\n    </div>\r\n  );\r\n\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleHomeClick = useCallback(() => {\r\n    history.push(`/`);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, []);\r\n\r\n  const handleSignOut = useCallback(() => {\r\n    firebase.signOut();\r\n    history.push(\"/\");\r\n  }, []);\r\n\r\n  const handleLoginClick = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegisterClick = () => {\r\n    history.push(\"/register\");\r\n  };\r\n  const handleCreatePost = () => {\r\n\r\n    setOpen(true)\r\n\r\n  };\r\n\r\n  const handleDirectMessage=()=>{\r\n    history.push(\"/dm\")\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleHomeClick}\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            React Share\r\n          </Typography>\r\n          {currentUser ? (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                {currentUser?.displayName}\r\n                <AccountCircle className={classes.accountCircle} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleSignOut}>Sign Out</MenuItem>\r\n                <MenuItem onClick={handleCreatePost}>New Post</MenuItem>\r\n                <MenuItem onClick={handleDirectMessage}>Direct Message</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          ) : (\r\n              <>\r\n                <MenuItem onClick={handleLoginClick}>Sign in</MenuItem>\r\n                <MenuItem onClick={handleRegisterClick}>Sign up</MenuItem>\r\n              </>\r\n            )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\Main.js",["102"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  capitalize,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport MediaCard from \"../components/MediaCard\";\r\nimport firebase from \"../firebase/firebase.utils\"\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"100vh\",\r\n    maxWidth: \"85%\",\r\n    marginTop: \"5rem\",\r\n    marginBottom: \"2rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  circular: {\r\n    margin: 'auto',\r\n  }\r\n}));\r\n\r\nfunction Main() {\r\n  const [userList, setUserList] = useState();\r\n\r\n  const currentUserId = firebase.firebaseAuth.currentUser?.uid\r\n  const mainStyles = stylesFunc();\r\n\r\n  const fetchData = async () => {\r\n\r\n    const res = await firebase.firebaseDb.collection(\"users\").get()\r\n\r\n    const userArrayFromFirebase = res.docs?.map(user => user.data())\r\n\r\n    setUserList(userArrayFromFirebase)\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <Container className={mainStyles.wrapper}>\r\n      {!userList ? (\r\n        //TODO: center loading icon\r\n        <CircularProgress className={mainStyles.circular} />\r\n      ) : (\r\n          <Grid container spacing={1}>\r\n            {userList?.map((user) => {\r\n              if (user.id == currentUserId) {\r\n                return null\r\n              } else {\r\n\r\n                return (\r\n                  <Grid item lg={3} md={4} sm={6} xs={12} key={user?.id}>\r\n                    <MediaCard\r\n                      id={user.id}\r\n                      userImage={user?.picture}\r\n                      userName={`${capitalize(user?.title)} ${user?.firstName} ${user?.lastName\r\n                        }`}\r\n                      userEmail={user?.email}\r\n                    />\r\n                  </Grid>\r\n                )\r\n              };\r\n            })}\r\n          </Grid>\r\n        )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\UserDetail.js",["103"],"import React, { useEffect, useState } from \"react\";\r\nimport cx from 'clsx';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { formatDateFunc } from \"../helper/FormatDate\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChevronLeftRounded from '@material-ui/icons/ChevronLeftRounded';\r\nimport ChevronRightRounded from '@material-ui/icons/ChevronRightRounded';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\r\nimport { useN01TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n01';\r\nimport { useBouncyShadowStyles } from '@mui-treasury/styles/shadow/bouncy';\r\nimport { Container, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    wrapper: {\r\n        display: 'flex',\r\n        minHeight: '100vh',\r\n        textAlign: \"center\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        maxWidth: \"85%\",\r\n        marginTop: \"5rem\",\r\n        marginBottom: \"2rem\",\r\n    },\r\n    circular: {\r\n        margin: 'auto',\r\n    },\r\n    root: {\r\n        maxWidth: 400,\r\n        margin: 'auto',\r\n        boxShadow: 'none',\r\n        borderRadius: 8,\r\n        marginTop: 24,\r\n    },\r\n    content: {\r\n        padding: 24,\r\n    },\r\n    cta: {\r\n        marginTop: 24,\r\n        textTransform: 'initial',\r\n    },\r\n}));\r\n\r\nexport const UserDetail = React.memo(function NewsCard() {\r\n    const styles = useStyles();\r\n    const mediaStyles = useWideCardMediaStyles();\r\n    const textCardContentStyles = useN01TextInfoContentStyles();\r\n    const shadowStyles = useBouncyShadowStyles();\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n    const handlePostButtonClick = () => {\r\n        history.push(`/user/${id}/post`);\r\n    };\r\n    const handleBackButtonClick = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    const [userDetail, setUserDetail] = useState();\r\n\r\n    useEffect(() => {\r\n        fetchData(`/user/${id}`)\r\n            .then((res) => setUserDetail(res))\r\n            .catch((err) => console.log(err))\r\n            .finally();\r\n    }, [id]);\r\n/*     console.log(formatDateFunc(userDetail?.dateOfBirth));  */\r\n    console.log(userDetail?.dateOfBirth); \r\n    return (\r\n        <Container className={styles.wrapper}>\r\n            {!userDetail == null ? (\r\n                <CircularProgress className={styles.circular} />\r\n            ) : (\r\n                    <>\r\n                        <Card className={cx(styles.root, shadowStyles.root)}>\r\n                            <CardMedia\r\n                                classes={mediaStyles}\r\n                                image={userDetail?.picture}\r\n                            />\r\n                            <CardContent className={styles.content}>\r\n                                <TextInfoContent\r\n                                    classes={textCardContentStyles}\r\n                                    overline={'Phone Number: ' + userDetail?.phone}\r\n                                    heading={'Address: '}\r\n                                    body={`${userDetail?.location?.country} / ${userDetail?.location?.street} ${userDetail?.location?.city} ${userDetail?.location?.state}  `}\r\n                                />\r\n                            </CardContent>\r\n                        </Card>\r\n                        <Card className={cx(styles.root, shadowStyles.root)}>\r\n                            <CardContent className={styles.content}>\r\n                                <TextInfoContent\r\n                                    classes={textCardContentStyles}\r\n                                    heading={userDetail?.firstName + ' ' + userDetail?.lastName}\r\n                                    body={\r\n                                        `${userDetail?.firstName} lives in ${userDetail?.location?.country} and \r\n                                            registered on `\r\n                                    }\r\n                                />\r\n                                <Button onClick={handlePostButtonClick} color={'primary'} fullWidth className={styles.cta}>\r\n                                    View {userDetail?.firstName} Posts.. <ChevronRightRounded />\r\n                                </Button>\r\n                                <Button onClick={handleBackButtonClick} color={'primary'} fullWidth className={styles.cta}>\r\n                                    <ChevronLeftRounded /> Back to home..\r\n                                </Button>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </>\r\n                )}\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default UserDetail;",["104","105"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\helper\\FetchData.js",["106","107"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\helper\\CustomErrorHandler.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\reportWebVitals.js",[],["108","109"],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\UserPost.js",["110","111","112","113","114"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Container, CircularProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { formatDateFunc } from \"../helper/FormatDate\";\r\nimport UserPostCard from \"../components/UserPostCard\";\r\nimport { PostAdd } from \"@material-ui/icons\";\r\nimport firebase from \"../firebase/firebase.utils\"\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    marginTop: \"10rem\",\r\n    minHeight: \"calc(100vh - 19.0625rem)\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\nfunction UserPost() {\r\n  const { id } = useParams();\r\n  const mainStyles = stylesFunc();\r\n\r\n  const [userPost, setUserPost] = useState();\r\n\r\n  const fetchFromFirestore=async ()=>{\r\n    let res= await firebase.firebaseDb.collection(\"allPosts\").doc(id).collection(\"userPosts\").get()\r\n    let arr=res.docs.map(post=>post.data())\r\n    let arr2=res.docs.map(post=>{\r\n      return({\r\n        postInfo:post.data(),\r\n        postId:post.id\r\n      })\r\n  })\r\n    \r\n    setUserPost(arr2)\r\n  }\r\n  /* setUserPost(res?.data) */\r\n  // TODO: fill in catch finally\r\n  useEffect(() => {\r\n    fetchData(`/user/${id}/post`)\r\n      .then((res) => null)\r\n      .catch()\r\n      .finally();\r\n    fetchFromFirestore()\r\n  }, [id]);\r\n\r\n\r\n  return (\r\n    <Container className={mainStyles.wrapper}>\r\n      {!userPost ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Grid container spacing={1}>\r\n          {userPost?.map((post) => {\r\n            const { firstName, lastName } = post.postInfo.owner;\r\n            return (\r\n              <Grid item sm={4} xs={6} key={post.postInfo?.id}>\r\n                <UserPostCard\r\n                  postOwnerId={id}\r\n                  id={post.postId}\r\n                  userInitial={firstName[0]}\r\n                  title={`${firstName} ${lastName}`}\r\n                  /* subheader={formatDateFunc(post.publishDate)} */\r\n                  imgSrc={post.postInfo.picture}\r\n                  imgTitle=\"Image Title\"\r\n                  description={post.postInfo.text}\r\n                  likes={post.postInfo.likes}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default UserPost;\r\n","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\components\\UserPostCard.js",["115","116","117","118","119"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { fetchData } from \"../helper/FetchData\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nimport firebase from \"../firebase/firebase.utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\nexport default function UserPostCard({\r\n  id,\r\n  userInitial,\r\n  title,\r\n  /* subheader, */\r\n  imgSrc,\r\n  imgTitle,\r\n  description,\r\n  likes,\r\n  postOwnerId\r\n}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [comments, setComments] = useState();\r\n  const [likesCount,setLikesCount]=useState(0)\r\n  const [isLiked,setIsLiked]=useState(false)\r\n  const [likesId,setLikesId]=useState()\r\n\r\n\r\n  useEffect(()=>{\r\n    \r\n    if(isLiked){\r\n        handleLikes()\r\n    }else{\r\n      const likesRefFirestore=firebase.firebaseDb.collection(\"allPosts\").doc(postOwnerId).collection(\"userPosts\")\r\n      .doc(id)\r\n\r\n      likesRefFirestore.collection(\"likes\").doc(likesId).delete().then(()=>likesRefFirestore.collection(\"likes\")\r\n      .get().then(res=>setLikesCount(res.docs.length)))\r\n    }\r\n\r\n\r\n  },[isLiked])\r\n\r\n  useEffect(()=>{\r\n\r\n    const commentRefFirestore=firebase.firebaseDb.collection(\"allPosts\").doc(postOwnerId).collection(\"userPosts\")\r\n    .doc(id).collection(\"comments\")\r\n\r\n    commentRefFirestore.get().then(res=>{\r\n      const arrFromFirestore=res.docs.map(comment=>comment.data())\r\n      setComments(arrFromFirestore)\r\n    })\r\n\r\n\r\n  },[])\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      text: \"\"\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      const commentRefFirestore=firebase.firebaseDb.collection(\"allPosts\").doc(postOwnerId).collection(\"userPosts\")\r\n      .doc(id).collection(\"comments\")\r\n\r\n      commentRefFirestore.add({\r\n        comment:values.text\r\n      }).then(()=>commentRefFirestore.get().then(res=>{\r\n        const arrFromFirestore=res.docs.map(comment=>comment.data())\r\n        setComments(arrFromFirestore)\r\n      }))\r\n    },\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  const handleExpandClick = (postId) => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n/*   const getComments = (postId) => {\r\n    fetchData(`/post/${postId}/comment`)\r\n      .then((res) => setComments(res?.data))\r\n      .catch()\r\n      .finally();\r\n  }; */\r\n\r\n  const handleLikes=()=>{\r\n    const likesRefFirestore=firebase.firebaseDb.collection(\"allPosts\").doc(postOwnerId).collection(\"userPosts\")\r\n      .doc(id)\r\n\r\n    likesRefFirestore.collection(\"likes\").add({likes:\"likes\"}).then((res)=>{\r\n      setLikesId(res.id)\r\n      likesRefFirestore.collection(\"likes\")\r\n      .get().then(res=>setLikesCount(res.docs.length))\r\n    }\r\n    \r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {userInitial}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n       /*  subheader={subheader} */\r\n      />\r\n      <CardMedia className={classes.media} image={imgSrc} title={imgTitle} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\"\r\n          onClick={()=>setIsLiked(!isLiked)}\r\n\r\n        >\r\n          <FavoriteIcon \r\n          style={{color:isLiked? \"red\":\"grey\"}}\r\n          />\r\n        </IconButton>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {`${likesCount} Likes`}\r\n        </Typography>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={() => handleExpandClick(id)}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"title\"\r\n              label=\"Comment\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              {...formik.getFieldProps(\"text\")}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n           Send\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n       \r\n      </form>\r\n\r\n\r\n        <CardContent>\r\n          {!comments ? (\r\n            <CircularProgress />\r\n          ) : comments.length ? (\r\n            comments.map((comment,index) => {\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  <Typography variant=\"body2\">\r\n                   name\r\n                  </Typography>\r\n                  <Typography paragraph>{comment.comment}</Typography>\r\n                  <hr />\r\n                </React.Fragment>\r\n              );\r\n            })\r\n          ) : (\r\n            \"No comment\"\r\n          )}\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n\r\nUserPostCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  userInitial: PropTypes.string,\r\n  title: PropTypes.string,\r\n /*  subheader: PropTypes.string, */\r\n  imgSrc: PropTypes.string,\r\n  imgTitle: PropTypes.string,\r\n  description: PropTypes.string,\r\n  likes: PropTypes.bool,\r\n};\r\n","C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\helper\\FormatDate.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\components\\Footer.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\components\\MediaCard.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\New.js",[],"C:\\Users\\sailor\\Desktop\\IT\\CLARUSWAY_FULL STACK\\REACT\\clarusway2\\src\\pages\\DirectMessage.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":48,"column":10,"nodeType":"126","messageId":"127","endLine":48,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":48,"column":14,"nodeType":"126","messageId":"127","endLine":48,"endColumn":20},{"ruleId":"120","replacedBy":"129"},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","severity":1,"message":"131","line":20,"column":3,"nodeType":"126","messageId":"127","endLine":20,"endColumn":12},{"ruleId":"124","severity":1,"message":"132","line":21,"column":3,"nodeType":"126","messageId":"127","endLine":21,"endColumn":9},{"ruleId":"124","severity":1,"message":"133","line":125,"column":9,"nodeType":"126","messageId":"127","endLine":125,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":180,"column":6,"nodeType":"136","endLine":180,"endColumn":8,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"135","line":189,"column":6,"nodeType":"136","endLine":189,"endColumn":8,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":61,"column":27,"nodeType":"141","messageId":"142","endLine":61,"endColumn":29},{"ruleId":"124","severity":1,"message":"143","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":24},{"ruleId":"120","replacedBy":"144"},{"ruleId":"122","replacedBy":"145"},{"ruleId":"124","severity":1,"message":"146","line":2,"column":9,"nodeType":"126","messageId":"127","endLine":2,"endColumn":31},{"ruleId":"124","severity":1,"message":"147","line":2,"column":33,"nodeType":"126","messageId":"127","endLine":2,"endColumn":52},{"ruleId":"120","replacedBy":"148"},{"ruleId":"122","replacedBy":"149"},{"ruleId":"124","severity":1,"message":"150","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"124","severity":1,"message":"143","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":24},{"ruleId":"124","severity":1,"message":"151","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":17},{"ruleId":"124","severity":1,"message":"152","line":30,"column":9,"nodeType":"126","messageId":"127","endLine":30,"endColumn":12},{"ruleId":"134","severity":1,"message":"153","line":48,"column":6,"nodeType":"136","endLine":48,"endColumn":10,"suggestions":"154"},{"ruleId":"124","severity":1,"message":"155","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"124","severity":1,"message":"156","line":19,"column":10,"nodeType":"126","messageId":"127","endLine":19,"endColumn":19},{"ruleId":"124","severity":1,"message":"131","line":26,"column":3,"nodeType":"126","messageId":"127","endLine":26,"endColumn":12},{"ruleId":"134","severity":1,"message":"157","line":85,"column":5,"nodeType":"136","endLine":85,"endColumn":14,"suggestions":"158"},{"ruleId":"134","severity":1,"message":"159","line":98,"column":5,"nodeType":"136","endLine":98,"endColumn":7,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","'setUrl' is assigned a value but never used.",["161"],["162"],"'Container' is defined but never used.","'Avatar' is defined but never used.","'handleOpenModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["163"],["164"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'formatDateFunc' is defined but never used.",["161"],["162"],"'REACT_APP_API_BASE_URL' is assigned a value but never used.","'REACT_APP_API_TOKEN' is assigned a value but never used.",["161"],["162"],"'Typography' is defined but never used.","'PostAdd' is defined but never used.","'arr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchFromFirestore'. Either include it or remove the dependency array.",["165"],"'Input' is defined but never used.","'fetchData' is defined but never used.","React Hook useEffect has missing dependencies: 'handleLikes', 'id', 'likesId', and 'postOwnerId'. Either include them or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'id' and 'postOwnerId'. Either include them or remove the dependency array.",["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"168","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [history]",{"range":"177","text":"178"},{"range":"179","text":"178"},"Update the dependencies array to be: [fetchFromFirestore, id]",{"range":"180","text":"181"},"Update the dependencies array to be: [handleLikes, id, isLiked, likesId, postOwnerId]",{"range":"182","text":"183"},"Update the dependencies array to be: [id, postOwnerId]",{"range":"184","text":"185"},[4374,4376],"[history]",[4561,4563],[1506,1510],"[fetchFromFirestore, id]",[2519,2528],"[handleLikes, id, isLiked, likesId, postOwnerId]",[2872,2874],"[id, postOwnerId]"]